let bgOuPas = false;
function encouragement(){
    document.getElementById("Dorian").style.background = "rgb(255,255,255,0.8)"; // pour que le texte qui pr√©sente Dorian reste lisible
    document.getElementById("Cassandree").style.background = "rgb(255,255,255,0.8)"; // pour que le texte qui pr√©sente Cassandre reste lisible
    if(bgOuPas == false){
        if(confirm('ALLER LES BLEUS !!!')){
            document.body.style.backgroundImage = "url(image2/confetis.jpg)";
            bgOuPas = true;
        }
    }else{
        if(confirm('Enlever les confetti üò≠')){
            document.body.style.backgroundImage = "";
            bgOuPas = false;
        }
    }
}
// ------------------ Quiz ------------------------------- //

const questions  = [     //on d√©finit une constante avec les questions et leur r√©ponses respectives
    {
        question : "O√π est ce que je dois me mettre dans un concert ?",
        answers : [
            { text: "Au premier rang", correct: false}, // on d√©finit les r√©ponses avec deux √©l√©ments
            { text: "Loin du premier rang", correct: true}, // un √©l√©ment text avec le texte de la r√©ponse
            { text: "S'√©loigner au maximum", correct: true}, // un √©l√©ment correct avec la v√©racit√© de la r√©ponse
            { text: "Devant les enceintes", correct: false}, // pour cela on utilise un bool√©en
        ]
    },
    {
        question : "Qu'est ce que je cherche √† √©viter ?",
        answers : [
            { text: "Les traumatismes", correct: true},
            { text: "R√©duire le niveau de son", correct: false},
            { text: "Les d√©gats d√©finitifs", correct: true},

        ]
    },
    {
        question : "Comment faire pour √©viter cela ?",
        answers : [
            { text: "Mettre des √©couteurs", correct: false},
            { text: "Porter des bouchons d'oreille", correct: true},
            { text: "Aller √† des concerts une fois par semaine", correct: false},
        ]
    },
    {
        question : "En cas de probl√®me que faire ?",
        answers : [
            { text: "Voir un docteur", correct: true},
            { text: "Rester chez soi", correct: false},
            { text: "Aller √† un autre concert", correct: false},
        ]
    },
]

const questionElement = document.getElementById('question'); // on d√©finit une constante qui prend l'√©l√©ment d'id question
const answerButtons = document.getElementById('answer-btn'); // on d√©finit une constante qui prend l'√©l√©ment d'id answer-btn
const nextButton = document.getElementById('next-btn');      // on d√©finit une constante qui prend l'√©l√©ment d'id next-btn
const returnBtn = document.getElementById('return-btn')      // on d√©finit une constante qui prend l'√©l√©ment d'id return-btn

let currentQuestionIndex = 0; // cette variable sert √† savoir √† quel question on est arriv√©
let score = 0; // cette variable permet de calculer le score

function startQuiz(){  // la fonction startQuiz est la fonction principale du quiz elle comporte toutes les autres
    returnBtn.style.display = 'none';
    nextButton.innerHtml = 'Suivant'; // on change le texte du bouton pouru passer √† la prochaine question √† : Suivant
    currentQuestionIndex = 0; //au d√©but du quiz on d√©finit la queestion √† la premi√®re question
    score = 0; // de m√™me pour le score on est seulement on train de les initialiser
    showQuestion(); // apr√®s l'initialisation on montre les questions
};

function showQuestion(){ //cette fonction sert √† afficher les questions
    resetState(); //on commence pas initialiser les r√©ponses aussi
    let currentQuestion = questions[currentQuestionIndex]; //on selectionne la question d'index currentQuestionIndex
    let questionNo = currentQuestionIndex + 1; // on rajoute 1 √† cet index qui commence par 0 pour l'√©crire ensuite
    questionElement.innerHTML = questionNo + ". " + currentQuestion.question; //on √©crit le num√©ro de la question, un point, ensuite la question

    currentQuestion.answers.forEach(answer => {  // cette fonction va se r√©pter pour chaque r√©ponse et dans cette boucle currentQuestion.answers va devenir answer
        const button = document.createElement("button"); // cr√©er un √©lement bouton
        button.innerHTML = answer.text; //on va donner √† ce bouton le text des r√©ponses possibles
        button.classList.add("btn"); //ensuite on lui attribue la classe btn
        answerButtons.appendChild(button); //on va rajouter ce bouton au boutons de r√©ponses
        if(answer.correct){
            button.dataset.correct = answer.correct; //on r√©cup√®re la valeur true si la r√©ponse est correcte
        }
        button.addEventListener('click', selectAnswer); //on attribue √† ce bouton la fonction selectAnswer quand on clique dessus
    })
};

function resetState(){ //cette fonction sert √† initialiser les r√©ponses
    nextButton.innerHTML = 'Suivant';
    nextButton.style.display = "none"; //on commence par cacher le bouton suivant
    while(answerButtons.firstChild){ //si les r√©ponses ont un premmier √©l√©ment
        answerButtons.removeChild(answerButtons.firstChild); //on le supprime
    }
};

function selectAnswer(e){ //cette fonction sert √† montrer la bonne et mauvaise r√©ponse
    const selectedBtn = e.target; //on cr√©e une constante √† chaque fois avec la r√©ponse cliqu√©e
    const isCorrect = selectedBtn.dataset.correct === "true"; //cette fonction est uniquement d√©fini par les r√©ponses correctes cliqu√©es
    if(isCorrect){
        selectedBtn.classList.add("correct"); //si la r√©ponse est correcte on attribue √† son bouton la classe correct
        score++; //et on rajoute le score
    }else{
        selectedBtn.classList.add("incorrect"); //sinon on lui attribue la classe incorrect
    }
    Array.from(answerButtons.children).forEach(button => { //on rajoute √† toutes les autres bouton non cliqu√©es la classe correct si ils le sont
        if(button.dataset.correct === "true"){
            button.classList.add("correct");
        };
        button.disabled = true; //ensuite on desactive les boutons
    });
    nextButton.style.display = 'block' //et on affiche le bouton suivant
};

function showScore(){ //cette fonction sert √† montrer le score √† la fin du quiz
    resetState(); //encore une fois on enl√®ve toutes les r√©ponses possibles
    if(score === 5){
        questionElement.innerHTML = `Ton score est de ${score} sur ${questions.length}! Eh bah dis donc vous avez tous compris.`; //on change l'√©lement question en le score atteint
    }else{
        questionElement.innerHTML = `Ton score est de ${score} sur ${questions.length}! N'oubliez pas de revoir ceux que vous avez rat√© üëç.`; //on change l'√©lement question en le score atteint
    }
    nextButton.innerHTML = 'Recommencer'; //on chanche le bouton suivant en un bouton recommencez
    nextButton.style.display = 'block'; //et on l'affiche
    returnBtn.innerHTML = 'Retour au site'; //on change le test du bouton de retour en Retourner
    returnBtn.style.display = 'block';
}


function handleNextQuestion(){ //cette fonction sert √† afficher des nouvelles questions / r√©ponses jusqu'√† ce qu'il y'en a plus
    currentQuestionIndex++; //on ajoute un au compteur de questions
    if(currentQuestionIndex < questions.length){ //si il reste encore des questions
        showQuestion(); //on affiche la questions suivant
    }else{
        showScore(); // sinon on affiche le score
    }
}

nextButton.addEventListener('click', () =>{
    if(currentQuestionIndex < questions.length){
        handleNextQuestion(); //si il reste encore des questions, quand on clique sur le bouton √ßa affiche les questions suivantes gr√¢ce √† la question pr√©c√©dente
    }else{
        startQuiz(); // sinon si il y'a plus de questions on red√©marre le quiz
    }
})

startQuiz(); //on execute la fonction pour afficher le tout
